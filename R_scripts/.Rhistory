data("ToothGrowth")
View(ToothGrowth)
library("dplyr")
#filtering the dataset
filtered_tg <- filter(ToothGrowth,dose==0.5)
View(filtered_tg)
#sorting using arrange function
arrange(flitered_tg,len)
#sorting using arrange function
arrange(filtered_tg,len)
#Using nested function to perform the same function as above
arrange(filter(ToothGrowth, dose == 0.5), len)
#Using nested function to perform the same function as above
arrange(filter(ToothGrowth, dose == 0.5), len)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
View(filtered_toothgrowth)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T), .group = "drop")
View(filtered_toothgrowth)
d <- "December 10th, 2020"
library(lubridate)
dt <- datetime(d)
datetime("d")
lubridate(d)
lubridate("d")
mdy(d)
data(palmerpenguins)
data(penguins)
library(palmerpenguins)
library(ggplot2)
data(penguins)
penguin_dataset <- data(penguins)
View(penguin_dataset)
penguin_dataset <- data(palmerpenguins)
library(palmerpenguins)
library(ggplot2)
penguin_dataset <- data("penguins")
View(penguin_dataset)
View(penguins)
View(penguins_raw)
library("palmerpenguins")
library("ggplot2")
penguin_dataset <- data("penguins_raw")
source("C:/Users/kats1/Desktop/Google Analytics Course/R/penguins.R", echo=TRUE)
library("palmerpenguins")
library("ggplot2")
penguin_dataset <- data("penguins")
View(penguin_dataset)
View("penguin_dataset")
View("penguins")
library("palmerpenguins")
library("ggplot2")
View(penguins)
View(penguins_raw)
# ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+geom_point(aes(color=species,shape=species))
?data()
?summarize
?mean
summarize
?summarize
View(penguins)
?data()
# ggplot(data=penguins,aes(x=flipper_length_mm,y=body_mass_g))+geom_point(aes(color=species,shape=species))
data()
data("airquality")
airquality_dataset <- data("airquality")
View(airquality_dataset)
View("airquality_dataset")
airquality_dataset
typeof(airquality_dataset)
typeof("airquality_dataset")
typeof(data("airquality"))
typeof(data("airquality"))
typeof(data("airquality"))
View(airquality)
summarize(airquality)
summarize("airquality")
summarise(airquality)
View(penguins)
install.packages(c("cluster", "MASS", "Matrix", "mgcv", "nlme", "survival"))
print("Hello")
2+1
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
master_data <- read.csv("/Users/locco/Desktop/Google_Analytics_Course/Case_Studies/Bike_share_Data/merged_csv.csv")
skim_without_charts(master_data)
library(ggplot2)
library(palmerpenguins)
library(here)
library(skimr)
library(tidyverse)
data("penguins") # loads the specified dataset
View(penguins) # View the entire dataset on a new tab
# mapping() within the geom_function()
ggplot(data = penguins) + geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g))
# mapping() function within the ggplot()
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g)) +  geom_point()
# adding species to the color aes
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)) +  geom_point()
# using shape aes instead of color to differentiate between species
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, shape = species)) +  geom_point()
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, shape = species, color = species, size = species)) +  geom_point()
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, alpha = species)) +  geom_point()
ggplot(data = penguins, mapping = aes(x = flipper_length_mm, y = body_mass_g, shape = species)) +  geom_point(color = 'Red')
# combining different geoms in a plot
ggplot(data = penguins) +
geom_smooth(mapping = aes(x = flipper_length_mm, y = body_mass_g, linetype = species, color = species)) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g, shape = species, color = species))
ggplot(data = penguins) +
geom_jitter(mapping = aes(x = flipper_length_mm, y = body_mass_g, linetype = species, color = species))
data("diamonds")
View(diamonds)
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, color = cut, fill = clarity))
# using facet_wrap()
ggplot(data = penguins) + geom_point(mapping = aes(x = bill_length_mm, y = flipper_length_mm, color = species)) + facet_wrap(~species)
# using facet_wrap() on diamonds dataset
ggplot(data = diamonds) + geom_bar(mapping = aes(x = color, fill = cut)) + facet_wrap(~ cut)
#facet_grid using 2 variable
ggplot(data = penguins) + geom_point(mapping = aes(x = bill_length_mm, y = flipper_length_mm, color = species)) + facet_grid(sex~species)
ggplot(data = penguins) + geom_point(mapping = aes(x = bill_length_mm, y = flipper_length_mm, color = species)) + facet_grid(~sex)
# adding title and subtitle & captions
ggplot(data = penguins) +
geom_point(mapping = aes(x = bill_length_mm, y = flipper_length_mm, color = species)) +
labs(title = "Palmer Penguins: Body Mass vs. Flipper Length", subtitle = "Sample of Three Penguin Species", caption = "Data collected by Dr. Kristen Gorman" )
ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)) +
labs(title = "Palmer Penguins: Body Mass vs. Flipper Length", subtitle = "Sample of Three Penguin Species", caption = "Data collected by Dr. Kristen Gorman" ) +     annotate("text", x = 220, y = 3500, label = "Gentoos are the largest Species", color = "blue", fontface = "bold", size = 4.5)
plot_fl_bm <- ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)) +
labs(title = "Palmer Penguins: Body Mass vs. Flipper Length", subtitle = "Sample of Three Penguin Species", caption = "Data collected by Dr. Kristen Gorman" )
plot_fl_bm + annotate("text", x = 220, y = 3500, label = "Gentoos are the largest Species", color = "blue", fontface = "bold", size = 3, angle = 45)
ggsave("palmer penguins.png")
head(master_data)
View(plot_fl_bm)
View(penguins)
View(master_data)
View(master_data)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
colnames(penguins) # colnames() returns the column names in the dataset
head(penguins) #returns the top 6 rows from the dataset
penguins %>%
select(-island:-body_mass_g) #returns all the columns but the ones in the range of (-island:-body_mass_g)
new_penguins <- penguins %>% # storing the dataset in a vector.
rename(New_Species = species, island_new = island) # multiple rename with ',' in between
colnames(new_penguins)
glimpse(penguins)
#glimpse of the dataset
glimpse(master_data)
View(diamonds)
View(diamonds)
trimmed_df <- master_data %>%
select(ride_id,rideable_type,total_seconds,distance_miles)
master_data <- read.csv("/Users/locco/Desktop/Google_Analytics_Course/Case_Studies/Bike_share_Data/merged_csv.csv")
#glimpse of the dataset
glimpse(master_data)
trimmed_df <- master_data %>%
select(ride_id,rideable_type,total_seconds,distance_miles) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
trimmed_df <- master_data %>%
select(ride_id, rideable_type,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
glimpse(member_df)
# dataframe containing only members data
member_df <- filter(master_data, member_casual == "member")
glimpse(member_df)
# creating a dataframe with only casual members
casual_df <- filter(master_data, member_casual == "casual")
glimpse(casual_df)
# dataframe containing only members data
member_df <- filter(trimmed_df, member_casual == "member")
glimpse(member_df)
# creating a dataframe with only casual members
casual_df <- filter(trimmed_df, member_casual == "casual")
glimpse(casual_df)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
library(skimr)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
library(ggplot2)
master_data <- read.csv("/Users/locco/Desktop/Google_Analytics_Course/Case_Studies/Bike_share_Data/merged_csv.csv")
#glimpse of the dataset
glimpse(master_data)
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
# dataframe containing only members data
member_df <- filter(trimmed_df, member_casual == "member")
glimpse(member_df)
# creating a dataframe with only casual members
casual_df <- filter(trimmed_df, member_casual == "casual")
glimpse(casual_df)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
annual_day_count
#counting the number of annual riders every day of the week
annual_day_count <- count(member_df, "days_of_week")
annual_day_count
#counting the number of annual riders every day of the week
library(plyr)
#counting the number of annual riders every day of the week
ddply(df, .(Month), nrow)
#counting the number of annual riders every day of the week
data.frame(table(member_df$days_of_week))
#annual_day_count <- ddply(member_df, .(days_of_week),  nrow)
#annual_day_count
#counting the number of annual riders every day of the week
count_days_annual <-  data.frame(table(member_df$days_of_week))
count_days_annual %>%
rename(days = var1) %>%
arrange(days)
colnames(count_days_annual)
count_days_annual %>%
rename(days = Var1) %>%
arrange(days)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, color = member_casual)) + facet_grid(~rideable_type)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
library(ggplot2)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
library(ggplot2)
master_data <- read.csv("/Users/locco/Desktop/Google_Analytics_Course/Case_Studies/Bike_share_Data/merged_csv.csv")
#glimpse of the dataset
glimpse(master_data)
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
# dataframe containing only members data
member_df <- filter(trimmed_df, member_casual == "member")
glimpse(member_df)
#counting the number of annual riders every day of the week
count_days_annual <-  data.frame(table(member_df$days_of_week))
count_days_annual %>%
rename(days = Var1) %>%
arrange()
# creating a dataframe with only casual members
casual_df <- filter(trimmed_df, member_casual == "casual")
glimpse(casual_df)
# creating a minutes column
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, color = member_casual)) + facet_grid(~rideable_type)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) + facet_grid(~member_casual)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
ggplot(data = master_data) + scale_y_continuous(labels = comma) +
geom_bar(mapping = aes(x = days_of_week)) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5)) + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma, breaks = y)
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma, breaks = days_of_week)
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = as.character(count), breaks = days_of_week)
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data , ylim(0,10)) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week, ylim(0,10))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week, ylim(0,2000))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week, ylim(0,2000))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5)) + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week, ylim(0,210)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5)) + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5)) + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
require(scales)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
require(scales)
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
require(scales)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
require(scales) +
ggplot(data = master_data) + geom_bar(mapping = aes(x = days_of_week) + scale_y_continuous(labels = comma) + facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week, ylim(0,2000))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
require(scales)
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
library(ggplot2)
require(scales)
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles) %>%
factor(days_of_week, levels = c("Sunday", "Monday", "Tuesday", "Wednesday","Thursday","Friday","Saturday"))
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles) %>%
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
# arranging the dataframe by day.
#change the data type of days_of_week to date type and then format
trimmed_df$days_of_week <- as.Date(trimmed_df$days_of_week,'%A')
glimpse(trimmed_df)
# arranging the dataframe by day.
#change the data type of days_of_week to date type and then format
trimmed_df$days_of_week <- as.Date(trimmed_df$days_of_week)
glimpse(trimmed_df)
library(tidyverse)
library(palmerpenguins)
library(skimr)
library(janitor)
library(ggplot2)
require(scales)
master_data <- read.csv("/Users/locco/Desktop/Google_Analytics_Course/Case_Studies/Bike_share_Data/merged_csv.csv")
#glimpse of the dataset
glimpse(master_data)
trimmed_df <- master_data %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
# arranging the dataframe by day.
#change the data type of days_of_week to date type and then format
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = master_data) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# arranging the dataframe by day.
#change the data type of days_of_week_val to date type and then format
arranged_by_day <- trimmed_df %>% arrange(days_of_week_val)
glimpse(arranged_by_day)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week_val)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week_val, xlim(0,6))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week_val, x = xlim(0,6))) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
trimmed_df <- master_data %>%
as.Date(master_data$started_at,'%m-%d-%y') %>%
select(ride_id, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
# How do the members and casual riders use the service throughout the week.
# We want to see number of people who ride each day and compare the difference between members and casual riders
#ggplot(data = master_data) + geom_point(mapping = aes(x = days_of_week, y = total_seconds, #color = member_casual)) + facet_grid(~rideable_type)
annual_vs_member_days_plot <- ggplot(data = arranged_by_day) +
geom_bar(mapping = aes(x = days_of_week)) +
facet_grid(~member_casual) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
annual_vs_member_days_plot + scale_y_continuous(labels = comma)
View(arranged_by_day)
# arranging the dataframe by day.
#change the data type of days_of_week_val to date type and then format
trimmed_df$days_of_week <- format(as.Date(trimmed_df$days_of_week), "%A")
trimmed_df <- master_data %>%
select(ride_id, started_at, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
glimpse(trimmed_df)
# arranging the dataframe by day.
#change the data type of days_of_week_val to date type and then format
trimmed_df$started_at <- format(as.Date(trimmed_df$started_at), "%A")
glimpse(trimmed_df)
trimmed_df <- master_data %>%
select(ride_id, started_at, rideable_type, member_casual,total_seconds, distance_miles, days_of_week, days_of_week_val, month ) %>%
rename(total_distance_miles = distance_miles)
trimmed_df <- master_data %>%
select(ride_id, started_at, rideable_type, member_casual,total_seconds, distance_miles) %>%
rename(total_distance_miles = distance_travelled_miles, total_seconds = ride_length_seconds)
trimmed_df <- master_data %>%
select(ride_id, started_at, rideable_type, member_casual,total_seconds, distance_miles) %>%
setnames(old = c('distance_miles', 'total_seconds') , new = c('distance_travelled_miles', 'ride_length_seconds') )
trimmed_df <- master_data %>%
select(ride_id, started_at, rideable_type, member_casual,total_seconds, distance_miles) %>%
set_names(old = c('distance_miles', 'total_seconds') , new = c('distance_travelled_miles', 'ride_length_seconds') )
